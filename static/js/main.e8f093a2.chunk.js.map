{"version":3,"sources":["App.js","index.js"],"names":["initialTodoList","id","name","description","status","createdAt","App","React","createElement","className","TodoList","todoLists","setTodoList","useState","showAddTask","setShowAddTask","filterBy","setFilterBy","selectedTodo","setSelectedTodo","handleTodoStatus","map","todoList","handleDeleteTodo","filter","handleSelectedTodo","todoItem","curr","console","log","length","onClick","show","htmlFor","value","onChange","e","target","AddTodoForm","onAddTask","task","tasks","onHandleAddTaskBtn","todo","TodoItem","key","onTodoStatus","onDeleteTodo","onSelectedTodo","EditTodoForm","onUpdateTodo","newTodo","_ref","isChecked","type","checked","Fragment","updatAt","_ref2","crypto","randomUUID","setName","setDescription","setStatus","getCurrentTime","currentDate","Date","toLocaleTimeString","hour12","getMonth","getDate","getFullYear","cancleAddTask","onSubmit","preventDefault","alert","newTask","placeholder","_ref3","newName","setNewName","newDescription","setNewDescription","newStatus","setNewStatus","updatedTodo","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e8f093a2.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useState } from \"react\";\r\n\r\nvar initialTodoList = [\r\n  {\r\n    id: 1,\r\n    name: \"Complete project proposal\",\r\n    description: \"Write and finalize the project proposal document\",\r\n    status: \"incomplete\",\r\n    createdAt: \"5:06 am, 05/12/2024\"\r\n  },\r\n  {\r\n    id: 2,\r\n    name: \"Prepare presentation slides\",\r\n    description: \"Create slides for the project presentation\",\r\n    status: \"incomplete\",\r\n    createdAt: \"5:06 am, 05/12/2024\"\r\n  },\r\n  {\r\n    id: 3,\r\n    name: \"Review code\",\r\n    description: \"Review and provide feedback on the codebase\",\r\n    status: \"complete\",\r\n    createdAt: \"5:06 am, 05/12/2024\"\r\n  },\r\n  {\r\n    id: 4,\r\n    name: \"Test new feature\",\r\n    description: \"Test the new feature implementation for bugs\",\r\n    status: \"incomplete\",\r\n    createdAt: \"5:06 am, 05/12/2024\"\r\n  }\r\n];\r\n\r\n// Example usage:\r\n// console.log(initialTodoList);\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Todo List üìù</h1>\r\n      <TodoList />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TodoList() {\r\n  const [todoLists, setTodoList] = useState(initialTodoList);\r\n\r\n  const [showAddTask, setShowAddTask] = useState(false);\r\n\r\n  const [filterBy, setFilterBy] = useState(\"all\");\r\n\r\n  const [selectedTodo, setSelectedTodo] = useState(null);\r\n\r\n\r\n\r\n  function handleTodoStatus(id) {\r\n\r\n    setTodoList(todoLists => todoLists.map(todoList => todoList.id === id ? (todoList.status === \"incomplete\" ? { ...todoList, status: \"complete\" } : { ...todoList, status: \"incomplete\" }) : todoList));\r\n\r\n  }\r\n\r\n  function handleDeleteTodo(id) {\r\n    setTodoList(todoLists => todoLists.filter(todoList => todoList.id !== id));\r\n  }\r\n\r\n  function handleAddTaskBtn() {\r\n    setShowAddTask((show) => !show);\r\n  }\r\n\r\n  function handleAddTask(task) {\r\n    setTodoList(tasks => [...tasks, task]);\r\n  }\r\n\r\n  function handleUpdatedTodo(id, newTodo) {\r\n    setTodoList(todoLists => todoLists.map(todoList => todoList.id === id ? { ...todoList, ...newTodo } : todoList));\r\n\r\n    setSelectedTodo(null);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  function handleSelectedTodo(todoItem) {\r\n    setSelectedTodo((curr) => curr?.id === todoItem.id ? null : todoItem);\r\n    // setSelectedTodo(todoItem);\r\n  }\r\n\r\n  let filter;\r\n\r\n  if (filterBy === \"all\") {\r\n    filter = todoLists;\r\n  }\r\n\r\n  if (filterBy === \"complete\") {\r\n    filter = todoLists.filter(todoList => todoList.status === \"complete\");\r\n    console.log(todoLists.length);\r\n  }\r\n\r\n  if (filterBy === \"incomplete\") {\r\n    filter = todoLists.filter(todoList => todoList.status === \"incomplete\")\r\n  }\r\n\r\n\r\n  return (\r\n    <div className=\"content-width\">\r\n      <div className=\"head-items\">\r\n        <div>\r\n          <button onClick={handleAddTaskBtn}>{showAddTask ? \"Close\" : \"Add Task\"}</button>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"filter\">Filter by status</label>\r\n          <select value={filterBy} onChange={(e) => setFilterBy(e.target.value)}>\r\n            <option value=\"all\">all</option>\r\n            <option value=\"incomplete\">incomplete</option>\r\n            <option value=\"complete\">complete</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      {\r\n        showAddTask &&\r\n        <div className=\"add-todo-form\">\r\n          <AddTodoForm onAddTask={handleAddTask} onHandleAddTaskBtn={setShowAddTask} />\r\n        </div>\r\n      }\r\n      <ul className=\"todo-list\">\r\n        {todoLists.length <= 0 ?\r\n          <p className=\"no-task\">No tasks to show ü•≤</p>\r\n          :\r\n          filter.map((todo) => <TodoItem todo={todo} key={todo.id} onTodoStatus={handleTodoStatus} onDeleteTodo={handleDeleteTodo} onSelectedTodo={handleSelectedTodo} selectedTodo={selectedTodo} />)\r\n        }\r\n      </ul>\r\n      {selectedTodo &&\r\n        <EditTodoForm selectedTodo={selectedTodo} onUpdateTodo={handleUpdatedTodo} setSelectedTodo={setSelectedTodo} />\r\n      }\r\n    </div >\r\n  )\r\n}\r\n\r\nfunction TodoItem({ todo, onTodoStatus, onDeleteTodo, onSelectedTodo, selectedTodo }) {\r\n  // const [statusCheck, setStatusCheck] = useState(\"incomplete\");\r\n\r\n  // function handleStatusCheck(e) {\r\n  //   if (statusCheck === \"incomplete\") {\r\n  //     setStatusCheck(\"complete\");\r\n  //   } else {\r\n  //     setStatusCheck(\"incomplete\");\r\n  //   }\r\n\r\n  // }\r\n\r\n  var isChecked = todo.status === \"complete\" ? \"checked\" : '';\r\n  return (\r\n    <li className={isChecked}>\r\n\r\n      <input type=\"checkbox\" className=\"checkbox\" checked={isChecked} onChange={() => onTodoStatus(todo.id)} />\r\n      <div className=\"todo-details\">\r\n        <h3 className=\"todo-title-name\">{todo.name}</h3>\r\n        <p className=\"todo-description\">{todo.description}</p>\r\n        <span className=\"todo-date\"><>Created At: {todo.createdAt}</></span><br></br>\r\n        {todo.updatAt &&\r\n          <span className=\"todo-date\">\r\n            <p>Edited At:  <strong>{todo.updatAt}</strong></p>\r\n          </span>\r\n        }\r\n      </div>\r\n      <div className=\"actions\">\r\n        <button className=\"delete\" onClick={() => onDeleteTodo(todo.id)}>‚ùå</button>\r\n        <button className=\"edit\" onClick={() => onSelectedTodo(todo)}>‚úèÔ∏è</button>\r\n      </div>\r\n    </li >\r\n  )\r\n}\r\n\r\nfunction AddTodoForm({ onAddTask, onHandleAddTaskBtn }) {\r\n  const id = crypto.randomUUID();\r\n  const [name, setName] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [status, setStatus] = useState(\"incomplete\");\r\n\r\n  function getCurrentTime() {\r\n    var currentDate = new Date();\r\n\r\n    // Format the current time\r\n    var formattedTime = currentDate.toLocaleTimeString('en-US', { hour12: true }) + ', ' +\r\n      (currentDate.getMonth() + 1) + '/' +\r\n      currentDate.getDate() + '/' +\r\n      currentDate.getFullYear();\r\n\r\n    return formattedTime;\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!name || !description) {\r\n      alert(\"Please fill in all fields\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"submitted\")\r\n\r\n    const newTask = { id: id, name, description, status: status, createdAt: getCurrentTime() };\r\n    console.log(newTask);\r\n\r\n    onAddTask(newTask);\r\n    cancleAddTask();\r\n  }\r\n\r\n  function cancleAddTask() {\r\n    setName(\"\");\r\n    setDescription(\"\");\r\n    setStatus(\"incomplete\");\r\n    onHandleAddTaskBtn(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"add-todo\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>name</label>\r\n          <input type=\"text\" placeholder=\"Add Todo\" value={name} onChange={(e) => setName(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>Description</label>\r\n          <input type=\"textarea\" placeholder=\"Add description\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>Status</label>\r\n          <select value={status} onChange={(e) => setStatus(e.target.value)} >\r\n            <option value=\"incomplete\">incomplete</option>\r\n            <option value=\"complete\">complete</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"actions\">\r\n          <button className=\"add-task\">Add Task</button>\r\n          <button className=\"cancel\" onClick={cancleAddTask}>Cancel</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction EditTodoForm({ selectedTodo, onUpdateTodo, setSelectedTodo }) {\r\n  const id = selectedTodo.id;\r\n  const [newName, setNewName] = useState(selectedTodo.name);\r\n  const [newDescription, setNewDescription] = useState(selectedTodo.description);\r\n  const [newStatus, setNewStatus] = useState(selectedTodo.status);\r\n  const createdAt = selectedTodo.createdAt;\r\n\r\n\r\n  function getCurrentTime() {\r\n    var currentDate = new Date();\r\n\r\n    // Format the current time\r\n    var formattedTime = currentDate.toLocaleTimeString('en-US', { hour12: true }) + ', ' +\r\n      (currentDate.getMonth() + 1) + '/' +\r\n      currentDate.getDate() + '/' +\r\n      currentDate.getFullYear();\r\n\r\n    return formattedTime;\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!newName || !newDescription) {\r\n      alert(\"Please fill in all fields\");\r\n      return;\r\n    }\r\n\r\n    const updatedTodo = { id: id, name: newName, description: newDescription, status: newStatus, createdAt, updatAt: getCurrentTime() };\r\n    console.log(id, updatedTodo);\r\n    onUpdateTodo(id, updatedTodo);\r\n  }\r\n  return (\r\n    <div className=\"add-todo edit-form\">\r\n      <form onSubmit={handleSubmit} >\r\n        <div>\r\n          <label>name</label>\r\n          <input type=\"text\" placeholder=\"Add Todo\" value={newName} onChange={(e) => setNewName(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>Description</label>\r\n          <input type=\"textarea\" placeholder=\"Add description\" value={newDescription} onChange={(e) => setNewDescription(e.target.value)} />\r\n        </div>\r\n        <div>\r\n          <label>Status</label>\r\n          <select value={newStatus} onChange={(e) => setNewStatus(e.target.value)}>\r\n            <option value=\"incomplete\">incomplete</option>\r\n            <option value=\"complete\">complete</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"actions\">\r\n          <button className=\"add-task\">Add Task</button>\r\n          <button className=\"cancel\" onClick={(e) => { setSelectedTodo(null) }}>Cancel</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\n\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);"],"sourceRoot":""}